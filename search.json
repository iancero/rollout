[{"path":[]},{"path":"https://iancero.github.io/rollout/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://iancero.github.io/rollout/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://iancero.github.io/rollout/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://iancero.github.io/rollout/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://iancero.github.io/rollout/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@posit.co. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://iancero.github.io/rollout/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://iancero.github.io/rollout/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://iancero.github.io/rollout/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://iancero.github.io/rollout/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://iancero.github.io/rollout/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://iancero.github.io/rollout/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://iancero.github.io/rollout/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to rollout","title":"Contributing to rollout","text":"outlines propose change rollout. detailed discussion contributing tidyverse packages, please see development contributing guide code review principles.","code":""},{"path":"https://iancero.github.io/rollout/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to rollout","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://iancero.github.io/rollout/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to rollout","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). See guide create great issue advice.","code":""},{"path":"https://iancero.github.io/rollout/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to rollout","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"iancero/rollout\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://iancero.github.io/rollout/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to rollout","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://iancero.github.io/rollout/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to rollout","text":"Please note rollout project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://iancero.github.io/rollout/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 rollout authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://iancero.github.io/rollout/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with rollout","title":"Getting help with rollout","text":"Thanks using rollout! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://iancero.github.io/rollout/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with rollout","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty incredible ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"https://iancero.github.io/rollout/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with rollout","text":"Armed reprex, next step figure ask. ’s question: start community.rstudio.com, /StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://iancero.github.io/rollout/SUPPORT.html","id":"what-happens-next","dir":"","previous_headings":"","what":"What happens next?","title":"Getting help with rollout","text":"efficient possible, development tidyverse packages tends bursty, shouldn’t worry don’t get immediate response. Typically don’t look repo sufficient quantity issues accumulates, ’s burst intense activity focus efforts. makes development efficient avoids expensive context switching problems, cost taking longer get back . process makes good reprex particularly important might multiple months initial report start working . can’t reproduce bug, can’t fix !","code":""},{"path":"https://iancero.github.io/rollout/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"First Last. Author, maintainer.","code":""},{"path":"https://iancero.github.io/rollout/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Last F (2025). rollout: Package (One Line, Title Case). R package version 0.0.0.9000, https://github.com/iancero/rollout.","code":"@Manual{,   title = {rollout: What the Package Does (One Line, Title Case)},   author = {First Last},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://github.com/iancero/rollout}, }"},{"path":[]},{"path":"https://iancero.github.io/rollout/index.html","id":"basic-example","dir":"","previous_headings":"","what":"Basic Example","title":"What the Package Does (One Line, Title Case)","text":"begin basic example widely known rollout trial format: stepped wedge trial. trial, sites randomly assigned cohorts. , cohorts assigned receive intervention beginning different times. Data recorded duration study, (baseline condition) initiation intervention condition. rollout, simulating trial begins matrix specification cohorts transition points, like . allows user maximum control can become complex process scheduling, responding real world pragmatic constraints. format, yet convenient simulation, rollout offers utility function pivot_schedule_longer(). addition performing wide--long pivot schedule, function also computed two time columns: chron_time local_time (0-indexed, make cohort-specific effects easier program). also constructed condition column conditions. Now data format, user prepared incoporate site-level background information might . example, part pre-trial assessment coordination study sites, user might access site-level information, like self-reported readiness receive intervention site, well relative population observational units site (e.g., classes per timepoint, servicemembers per class). simplicity, imagine data . link design dataframe. can simple left_join(), stuck fact two columns actually counts observational units (fact, nested units), need expanded . Anticipating common situation, rollout helper function joining expanding site-related information: design fully expanded, now need initialize several replicates dataset later simulation data.","code":"library(tidyverse) #> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ── #> ✔ dplyr     1.1.4     ✔ readr     2.1.5 #> ✔ forcats   1.0.0     ✔ stringr   1.5.1 #> ✔ ggplot2   3.5.1     ✔ tibble    3.2.1 #> ✔ lubridate 1.9.3     ✔ tidyr     1.3.1 #> ✔ purrr     1.0.2      #> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── #> ✖ dplyr::filter() masks stats::filter() #> ✖ dplyr::lag()    masks stats::lag() #> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors  rollout_schedule <- tribble(   ~cohort, ~site, ~t1,    ~t2,    ~t3,    ~t4,    ~t5,   \"c1\",    \"001\", \"bsln\", \"intv\", \"intv\", \"intv\", \"intv\",   \"c1\",    \"002\", \"bsln\", \"intv\", \"intv\", \"intv\", \"intv\",   \"c2\",    \"003\", \"bsln\", \"bsln\", \"intv\", \"intv\", \"intv\",   \"c2\",    \"004\", \"bsln\", \"bsln\", \"intv\", \"intv\", \"intv\",   \"c3\",    \"005\", \"bsln\", \"bsln\", \"bsln\", \"intv\", \"intv\",   \"c3\",    \"006\", \"bsln\", \"bsln\", \"bsln\", \"intv\", \"intv\",   \"c4\",    \"007\", \"bsln\", \"bsln\", \"bsln\", \"bsln\", \"intv\",   \"c4\",    \"008\", \"bsln\", \"bsln\", \"bsln\", \"bsln\", \"intv\" ) library(rollout)  rollout_design <- rollout_schedule |>    pivot_schedule_longer(t1:t5) #> # A tibble: 40 × 4 #>    cohort site  chron_time condition #>    <chr>  <chr>      <dbl> <fct>     #>  1 c1     001            1 bsln      #>  2 c1     001            2 intv      #>  3 c1     001            3 intv      #>  4 c1     001            4 intv      #>  5 c1     001            5 intv      #>  6 c1     002            1 bsln      #>  7 c1     002            2 intv      #>  8 c1     002            3 intv      #>  9 c1     002            4 intv      #> 10 c1     002            5 intv      #> # ℹ 30 more rows  head(rollout_design) #> # A tibble: 6 × 5 #>   cohort site  chron_time condition local_time #>   <chr>  <chr>      <dbl> <fct>          <dbl> #> 1 c1     001            1 bsln               0 #> 2 c1     001            2 intv               0 #> 3 c1     001            3 intv               1 #> 4 c1     001            4 intv               2 #> 5 c1     001            5 intv               3 #> 6 c1     002            1 bsln               1 site_info <- tribble(   ~site, ~admin_readiness, ~classes_per_time, ~members_per_class,   \"001\",    6,                11,                23,   \"002\",    7,                15,                25,   \"003\",    6,                11,                22,   \"004\",    9,                12,                16,   \"005\",    7,                11,                24,   \"006\",    2,                9,                 22,   \"007\",    2,                9,                 16,   \"008\",    7,                14,                25, ) rollout_design <- rollout_design |>    join_info(     site_info,     by = \"site\",     uncount_vars = c(\"classes_per_time\", \"members_per_class\"),     .ids = c(\"class\", \"member\")   ) simulated_trials <- rollout_design |>    initialize_replicates(n = 100)  head(simulated_trials) #> # A tibble: 6 × 9 #>   sample_id cohort site  chron_time condition local_time admin_readiness class #>       <int> <chr>  <chr>      <dbl> <fct>          <dbl>           <dbl> <int> #> 1         1 c1     001            1 bsln               0               6     1 #> 2         2 c1     001            1 bsln               0               6     1 #> 3         3 c1     001            1 bsln               0               6     1 #> 4         4 c1     001            1 bsln               0               6     1 #> 5         5 c1     001            1 bsln               0               6     1 #> 6         6 c1     001            1 bsln               0               6     1 #> # ℹ 1 more variable: member <int>"},{"path":[]},{"path":"https://iancero.github.io/rollout/index.html","id":"fixed-effects","dir":"","previous_headings":"Basic Example > Simulating effects","what":"Fixed effects","title":"What the Package Does (One Line, Title Case)","text":"start, let’s add intervention effect gives immediate boost individual-level outcomes, followed slow improvement. ’ll also add effect representing potential confound - global improvement overall population (economist might call “secular trend”). Underneath hood, add_fixed_effect() thin wrapper around mutate() things: first, limits number variables can created single call exactly one named argument. admittedly creates redundant work user, now call add_fixed_effect() multiple times, comes advantage forcing readable code designs. effect generation functions () rollout follow convention. Second, pre-pend effect variables “.” make obvious variables simulated_trials dataframe data effects eventually used generation outcome variable. way, user can focus data want effect associated , rather keeping variable names straight. also facilitates creation outcome creation function, can automatically search effects simulated_trials aggregate outcome.","code":"simulated_trials <- simulated_trials |>   add_fixed_effect(     condition = case_when(       condition == \"bsln\" ~ 0,       condition == \"intv\" ~ .50 + .10*local_time)) |>    add_fixed_effect(     popwide_decline = .10*chron_time)  head(simulated_trials) #> # A tibble: 6 × 11 #>   sample_id cohort site  chron_time condition local_time admin_readiness class #>       <int> <chr>  <chr>      <dbl> <fct>          <dbl>           <dbl> <int> #> 1         1 c1     001            1 bsln               0               6     1 #> 2         2 c1     001            1 bsln               0               6     1 #> 3         3 c1     001            1 bsln               0               6     1 #> 4         4 c1     001            1 bsln               0               6     1 #> 5         5 c1     001            1 bsln               0               6     1 #> 6         6 c1     001            1 bsln               0               6     1 #> # ℹ 3 more variables: member <int>, .condition <dbl>, .popwide_decline <dbl>"},{"path":"https://iancero.github.io/rollout/index.html","id":"random-effects","dir":"","previous_headings":"Basic Example > Simulating effects","what":"Random effects","title":"What the Package Does (One Line, Title Case)","text":"Random effects simulated similarly fixed effects, except sometimes important take nesting structure account. example, create class-level random intercept, need specify classes nested within sites cohorts, like : another example trial, might also important even instances given class share variance overlapping students. , underneath hood, wrapper dplyr functions applying groupby-mutate-ungroup pattern. However, slightly complicated intercept existing group structure incoming dataframe (e.g., group_by called ), store , calculate random effect according nesting structure (specified), regroup dataframe exactly function. nesting structure specified, function simply rely grouping structure given incoming dataframe.","code":"simulated_trials <- simulated_trials |>   add_random_effect(     instructor_experience = rnorm(n = 1, mean = 0, sd = .30),     .nesting = c(\"cohort\", \"site\", \"class\"))  head(simulated_trials) #> # A tibble: 6 × 12 #>   sample_id cohort site  chron_time condition local_time admin_readiness class #>       <int> <chr>  <chr>      <dbl> <fct>          <dbl>           <dbl> <int> #> 1         1 c1     001            1 bsln               0               6     1 #> 2         2 c1     001            1 bsln               0               6     1 #> 3         3 c1     001            1 bsln               0               6     1 #> 4         4 c1     001            1 bsln               0               6     1 #> 5         5 c1     001            1 bsln               0               6     1 #> 6         6 c1     001            1 bsln               0               6     1 #> # ℹ 4 more variables: member <int>, .condition <dbl>, .popwide_decline <dbl>, #> #   .instructor_experience <dbl> simulated_trials <- simulated_trials |>   add_random_effect(     student_cohesion = rnorm(n = 1, mean = 0, sd = .20),     .nesting = c(\"cohort\", \"site\", \"class\", \"local_time\"))  head(simulated_trials) #> # A tibble: 6 × 13 #>   sample_id cohort site  chron_time condition local_time admin_readiness class #>       <int> <chr>  <chr>      <dbl> <fct>          <dbl>           <dbl> <int> #> 1         1 c1     001            1 bsln               0               6     1 #> 2         2 c1     001            1 bsln               0               6     1 #> 3         3 c1     001            1 bsln               0               6     1 #> 4         4 c1     001            1 bsln               0               6     1 #> 5         5 c1     001            1 bsln               0               6     1 #> 6         6 c1     001            1 bsln               0               6     1 #> # ℹ 5 more variables: member <int>, .condition <dbl>, .popwide_decline <dbl>, #> #   .instructor_experience <dbl>, .student_cohesion <dbl>"},{"path":"https://iancero.github.io/rollout/index.html","id":"error-variance","dir":"","previous_headings":"Basic Example > Simulating effects","what":"Error variance","title":"What the Package Does (One Line, Title Case)","text":"Finally, simplest effect add random error, simple enough specify just variance.","code":"simulated_trials <- simulated_trials |>   add_error(variance = .25)"},{"path":"https://iancero.github.io/rollout/index.html","id":"outcome-variables","dir":"","previous_headings":"Basic Example","what":"Outcome variables","title":"What the Package Does (One Line, Title Case)","text":"can add three different types outcome variables: linear, binary (logistic), Poisson. Unlike effects , automatically prepended “.” observed values - rather effects, data. Additionally, binary Poisson functions return multiple columns, including final observed output column (.e., simulated binary outcome) associated input columns involved producing (.e., y_linear, y_prob).","code":"simulated_trials <- simulated_trials |>   add_binary_outcome()  head(simulated_trials) #> # A tibble: 6 × 17 #>   sample_id cohort site  chron_time condition local_time admin_readiness class #>       <int> <chr>  <chr>      <dbl> <fct>          <dbl>           <dbl> <int> #> 1         1 c1     001            1 bsln               0               6     1 #> 2         2 c1     001            1 bsln               0               6     1 #> 3         3 c1     001            1 bsln               0               6     1 #> 4         4 c1     001            1 bsln               0               6     1 #> 5         5 c1     001            1 bsln               0               6     1 #> 6         6 c1     001            1 bsln               0               6     1 #> # ℹ 9 more variables: member <int>, .condition <dbl>, .popwide_decline <dbl>, #> #   .instructor_experience <dbl>, .student_cohesion <dbl>, .error <dbl>, #> #   y_linear <dbl>, y_prob <dbl>, y_bin <int>"},{"path":"https://iancero.github.io/rollout/reference/eval_between.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the proportion of values within term-specific intervals within grouped simulation results — eval_between","title":"Compute the proportion of values within term-specific intervals within grouped simulation results — eval_between","text":"Computes proportion x values falling within term-specific intervals within group, typically inside evaluate_model_results() simulation evaluation pipelines.","code":""},{"path":"https://iancero.github.io/rollout/reference/eval_between.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the proportion of values within term-specific intervals within grouped simulation results — eval_between","text":"","code":"eval_between(x, term = NULL, na.rm = FALSE)"},{"path":"https://iancero.github.io/rollout/reference/eval_between.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the proportion of values within term-specific intervals within grouped simulation results — eval_between","text":"x numeric vector estimates statistics. term named list numeric vectors length 2, giving lower upper bounds term. example, list(\"(Intercept)\" = c(-1, 1), x = c(1, 3)). NULL (default), interval assumed [0, 1]. na.rm Logical; whether remove missing values computing proportion. Defaults FALSE.","code":""},{"path":"https://iancero.github.io/rollout/reference/eval_between.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the proportion of values within term-specific intervals within grouped simulation results — eval_between","text":"numeric scalar representing proportion x within term-specific interval within current group.","code":""},{"path":"https://iancero.github.io/rollout/reference/eval_between.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute the proportion of values within term-specific intervals within grouped simulation results — eval_between","text":"function designed used inside dplyr::summarise() within grouped tidyverse pipeline, typically grouping term. term provided, current grouping must include term variable matching names term. term group found provided term mapping, function return NA warning.","code":""},{"path":"https://iancero.github.io/rollout/reference/eval_between.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the proportion of values within term-specific intervals within grouped simulation results — eval_between","text":"","code":"library(dplyr) #> Error in library(dplyr): there is no package called ‘dplyr’ library(purrr) library(broom.mixed) #> Error in library(broom.mixed): there is no package called ‘broom.mixed’  sim_models <- tibble(   id = 1:50,   model = map(1:50, ~ lm(mpg ~ wt, data = mtcars)) ) |>   extract_model_results() #> Error in loadNamespace(x): there is no package called ‘tidyr’  sim_models |>   filter(term == \"wt\") |>   evaluate_model_results(     prop_between = eval_between(       estimate,       term = list(\"wt\" = c(-1, 0))     )   ) #> Error in loadNamespace(x): there is no package called ‘dplyr’"},{"path":"https://iancero.github.io/rollout/reference/eval_bias.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute bias relative to term-specific true values within grouped simulation results — eval_bias","title":"Compute bias relative to term-specific true values within grouped simulation results — eval_bias","text":"Computes mean bias (difference estimated values true values) within group, typically inside evaluate_model_results() simulation evaluation pipelines.","code":""},{"path":"https://iancero.github.io/rollout/reference/eval_bias.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute bias relative to term-specific true values within grouped simulation results — eval_bias","text":"","code":"eval_bias(x, term = NULL, na.rm = FALSE)"},{"path":"https://iancero.github.io/rollout/reference/eval_bias.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute bias relative to term-specific true values within grouped simulation results — eval_bias","text":"x numeric vector estimates (e.g., model term). term named numeric vector providing true value term. example, c(\"(Intercept)\" = 0, x = 2) specify true values term. NULL (default), bias computed relative zero. na.rm Logical; whether remove missing values computing mean bias. Defaults FALSE.","code":""},{"path":"https://iancero.github.io/rollout/reference/eval_bias.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute bias relative to term-specific true values within grouped simulation results — eval_bias","text":"numeric scalar representing mean bias within current group.","code":""},{"path":"https://iancero.github.io/rollout/reference/eval_bias.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute bias relative to term-specific true values within grouped simulation results — eval_bias","text":"function designed used inside dplyr::summarise() within grouped tidyverse pipeline, typically grouping term. computes mean x minus true value corresponding term. term provided, current grouping must include term variable matching names term. term group found provided term mapping, function return NA warning.","code":""},{"path":"https://iancero.github.io/rollout/reference/eval_bias.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute bias relative to term-specific true values within grouped simulation results — eval_bias","text":"","code":"library(dplyr) #> Error in library(dplyr): there is no package called ‘dplyr’ library(purrr) library(broom.mixed) #> Error in library(broom.mixed): there is no package called ‘broom.mixed’  # Simulate and fit models sim_models <- tibble(   id = 1:50,   model = map(1:50, ~ lm(mpg ~ wt, data = mtcars)) ) |>   extract_model_results() #> Error in loadNamespace(x): there is no package called ‘tidyr’  # Compute bias relative to true value (hypothetical slope = -5) sim_models |>   filter(term == \"wt\") |>   evaluate_model_results(     bias = eval_bias(       estimate,       term = c(\"wt\" = -5)     )   ) #> Error in loadNamespace(x): there is no package called ‘dplyr’  # Compute bias relative to zero for all terms sim_models |>   group_by(term) |>   evaluate_model_results(     bias = eval_bias(estimate)   ) #> Error in loadNamespace(x): there is no package called ‘dplyr’"},{"path":"https://iancero.github.io/rollout/reference/eval_greater_than.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the proportion of values above term-specific thresholds within grouped simulation results — eval_greater_than","title":"Compute the proportion of values above term-specific thresholds within grouped simulation results — eval_greater_than","text":"Computes proportion x values exceeding term-specific thresholds within group, typically inside evaluate_model_results() simulation evaluation pipelines.","code":""},{"path":"https://iancero.github.io/rollout/reference/eval_greater_than.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the proportion of values above term-specific thresholds within grouped simulation results — eval_greater_than","text":"","code":"eval_greater_than(x, term = NULL, na.rm = FALSE)"},{"path":"https://iancero.github.io/rollout/reference/eval_greater_than.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the proportion of values above term-specific thresholds within grouped simulation results — eval_greater_than","text":"x numeric vector estimates statistics. term named numeric vector providing threshold term. example, c(\"(Intercept)\" = 0, x = 2). NULL (default), threshold assumed zero. na.rm Logical; whether remove missing values computing proportion. Defaults FALSE.","code":""},{"path":"https://iancero.github.io/rollout/reference/eval_greater_than.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the proportion of values above term-specific thresholds within grouped simulation results — eval_greater_than","text":"numeric scalar representing proportion x exceeding term-specific threshold within current group.","code":""},{"path":"https://iancero.github.io/rollout/reference/eval_greater_than.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute the proportion of values above term-specific thresholds within grouped simulation results — eval_greater_than","text":"function designed used inside dplyr::summarise() within grouped tidyverse pipeline, typically grouping term. term provided, current grouping must include term variable matching names term. term group found provided term mapping, function return NA warning.","code":""},{"path":"https://iancero.github.io/rollout/reference/eval_greater_than.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the proportion of values above term-specific thresholds within grouped simulation results — eval_greater_than","text":"","code":"library(dplyr) #> Error in library(dplyr): there is no package called ‘dplyr’ library(purrr) library(broom.mixed) #> Error in library(broom.mixed): there is no package called ‘broom.mixed’  sim_models <- tibble(   id = 1:50,   model = map(1:50, ~ lm(mpg ~ wt, data = mtcars)) ) |>   extract_model_results() #> Error in loadNamespace(x): there is no package called ‘tidyr’  sim_models |>   filter(term == \"wt\") |>   evaluate_model_results(     prop_above_0 = eval_greater_than(       estimate,       term = c(\"wt\" = 0)     )   ) #> Error in loadNamespace(x): there is no package called ‘dplyr’"},{"path":"https://iancero.github.io/rollout/reference/eval_less_than.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the proportion of values below term-specific thresholds within grouped simulation results — eval_less_than","title":"Compute the proportion of values below term-specific thresholds within grouped simulation results — eval_less_than","text":"Computes proportion x values falling term-specific thresholds within group, typically inside evaluate_model_results() simulation evaluation pipelines.","code":""},{"path":"https://iancero.github.io/rollout/reference/eval_less_than.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the proportion of values below term-specific thresholds within grouped simulation results — eval_less_than","text":"","code":"eval_less_than(x, term = NULL, na.rm = FALSE)"},{"path":"https://iancero.github.io/rollout/reference/eval_less_than.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the proportion of values below term-specific thresholds within grouped simulation results — eval_less_than","text":"x numeric vector estimates statistics. term named numeric vector providing threshold term. example, c(\"(Intercept)\" = 0, x = 2). NULL (default), threshold assumed zero. na.rm Logical; whether remove missing values computing proportion. Defaults FALSE.","code":""},{"path":"https://iancero.github.io/rollout/reference/eval_less_than.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the proportion of values below term-specific thresholds within grouped simulation results — eval_less_than","text":"numeric scalar representing proportion x term-specific threshold within current group.","code":""},{"path":"https://iancero.github.io/rollout/reference/eval_less_than.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute the proportion of values below term-specific thresholds within grouped simulation results — eval_less_than","text":"function designed used inside dplyr::summarise() within grouped tidyverse pipeline, typically grouping term. term provided, current grouping must include term variable matching names term. term group found provided term mapping, function return NA warning.","code":""},{"path":"https://iancero.github.io/rollout/reference/eval_less_than.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the proportion of values below term-specific thresholds within grouped simulation results — eval_less_than","text":"","code":"library(dplyr) #> Error in library(dplyr): there is no package called ‘dplyr’ library(purrr) library(broom.mixed) #> Error in library(broom.mixed): there is no package called ‘broom.mixed’  sim_models <- tibble(   id = 1:50,   model = map(1:50, ~ lm(mpg ~ wt, data = mtcars)) ) |>   extract_model_results() #> Error in loadNamespace(x): there is no package called ‘tidyr’  sim_models |>   filter(term == \"wt\") |>   evaluate_model_results(     prop_below_0 = eval_less_than(       estimate,       term = c(\"wt\" = 0)     )   ) #> Error in loadNamespace(x): there is no package called ‘dplyr’"},{"path":"https://iancero.github.io/rollout/reference/eval_quantile.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the observed quantile value for each term within grouped simulation results — eval_quantile","title":"Compute the observed quantile value for each term within grouped simulation results — eval_quantile","text":"Computes specified quantile x within group, typically inside evaluate_model_results() simulation evaluation pipelines.","code":""},{"path":"https://iancero.github.io/rollout/reference/eval_quantile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the observed quantile value for each term within grouped simulation results — eval_quantile","text":"","code":"eval_quantile(x, term = NULL, na.rm = FALSE)"},{"path":"https://iancero.github.io/rollout/reference/eval_quantile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the observed quantile value for each term within grouped simulation results — eval_quantile","text":"x numeric vector estimates statistics. term named numeric vector quantile probabilities term. example, c(\"(Intercept)\" = 0.05, x = 0.95). NULL (default), computes median (0.5). na.rm Logical; whether remove missing values computing quantile. Defaults FALSE.","code":""},{"path":"https://iancero.github.io/rollout/reference/eval_quantile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the observed quantile value for each term within grouped simulation results — eval_quantile","text":"numeric scalar representing observed quantile x within current group.","code":""},{"path":"https://iancero.github.io/rollout/reference/eval_quantile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute the observed quantile value for each term within grouped simulation results — eval_quantile","text":"function designed used inside dplyr::summarise() within grouped tidyverse pipeline, typically grouping term. term provided, current grouping must include term variable matching names term. term group found provided term mapping, function return NA warning.","code":""},{"path":"https://iancero.github.io/rollout/reference/eval_quantile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the observed quantile value for each term within grouped simulation results — eval_quantile","text":"","code":"library(dplyr) #> Error in library(dplyr): there is no package called ‘dplyr’ library(purrr) library(broom.mixed) #> Error in library(broom.mixed): there is no package called ‘broom.mixed’  sim_models <- tibble(   id = 1:50,   model = map(1:50, ~ lm(mpg ~ wt, data = mtcars)) ) |>   extract_model_results() #> Error in loadNamespace(x): there is no package called ‘tidyr’  sim_models |>   filter(term == \"wt\") |>   evaluate_model_results(     lower_quantile = eval_quantile(       estimate,       term = c(\"wt\" = 0.05)     ),     upper_quantile = eval_quantile(       estimate,       term = c(\"wt\" = 0.95)     )   ) #> Error in loadNamespace(x): there is no package called ‘dplyr’"},{"path":"https://iancero.github.io/rollout/reference/evaluate_model_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise simulation results from extracted model estimates — evaluate_model_results","title":"Summarise simulation results from extracted model estimates — evaluate_model_results","text":"Computes summary statistics (e.g., power, custom summaries) across set extracted model results, typically extract_model_results(), facilitate simulation evaluation reporting.","code":""},{"path":"https://iancero.github.io/rollout/reference/evaluate_model_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise simulation results from extracted model estimates — evaluate_model_results","text":"","code":"evaluate_model_results(   results,   alpha = 0.05,   ...,   .summarise_standard_broom = FALSE,   broom_cols = c(\"estimate\", \"std.error\", \"statistic\", \"df\", \"p.value\") )"},{"path":"https://iancero.github.io/rollout/reference/evaluate_model_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise simulation results from extracted model estimates — evaluate_model_results","text":"results data frame extracted model results, typically including columns like term, estimate, std.error, statistic, p.value. alpha Significance level used compute power. Defaults 0.05. ... Additional summary expressions compute within dplyr::summarise(). may include calls helper functions like eval_bias(), eval_quantile(), direct summaries mean(estimate, na.rm = TRUE). .summarise_standard_broom Logical; TRUE, computes mean standard deviation standard broom columns present data (columns broom_cols). Defaults FALSE. broom_cols Character vector standard broom columns summarise .summarise_standard_broom = TRUE. Defaults c(\"estimate\", \"std.error\", \"statistic\", \"df\", \"p.value\").","code":""},{"path":"https://iancero.github.io/rollout/reference/evaluate_model_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise simulation results from extracted model estimates — evaluate_model_results","text":"summarised data frame containing: n_models: number models summarised. power: proportion p-values less alpha (NA p-values NA). Additional columns corresponding custom summaries provided .... Mean SD summaries broom columns .summarise_standard_broom = TRUE.","code":""},{"path":"https://iancero.github.io/rollout/reference/evaluate_model_results.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise simulation results from extracted model estimates — evaluate_model_results","text":"","code":"library(dplyr) #> Error in library(dplyr): there is no package called ‘dplyr’ library(purrr) library(broom.mixed) #> Error in library(broom.mixed): there is no package called ‘broom.mixed’  # Simulate and fit models sim_models <- tibble(   id = 1:50,   model = map(1:50, ~ lm(mpg ~ wt, data = mtcars)) ) |>   extract_model_results() #> Error in loadNamespace(x): there is no package called ‘tidyr’  # Evaluate power and mean estimate for the slope sim_models |>   filter(term == \"wt\") |>   evaluate_model_results(     alpha = 0.05,     mean_estimate = mean(estimate, na.rm = TRUE),     sd_estimate = sd(estimate, na.rm = TRUE)   ) #> Error in loadNamespace(x): there is no package called ‘dplyr’  # Evaluate with .summarise_standard_broom = TRUE sim_models |>   filter(term == \"wt\") |>   evaluate_model_results(     .summarise_standard_broom = TRUE   ) #> Error in loadNamespace(x): there is no package called ‘dplyr’  # Evaluate with eval_bias to compute bias relative to the true value # Suppose the true slope of wt is -5 (hypothetical) sim_models |>   filter(term == \"wt\") |>   evaluate_model_results(     bias = eval_bias(       estimate,       term = c(\"wt\" = -5)     )   ) #> Error in loadNamespace(x): there is no package called ‘dplyr’"},{"path":"https://iancero.github.io/rollout/reference/extract_model_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract and tidy model results from a column of models — extract_model_results","title":"Extract and tidy model results from a column of models — extract_model_results","text":"Applies tidying function (default broom.mixed::tidy) column models, returning tidy data frame one row per term per model, suitable downstream summarisation evaluation simulation studies.","code":""},{"path":"https://iancero.github.io/rollout/reference/extract_model_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract and tidy model results from a column of models — extract_model_results","text":"","code":"extract_model_results(   models,   model_col = model,   tidy_fun = broom.mixed::tidy,   .term = NULL )"},{"path":"https://iancero.github.io/rollout/reference/extract_model_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract and tidy model results from a column of models — extract_model_results","text":"models data frame containing column fitted model objects. model_col Unquoted column name containing models. Default model. tidy_fun tidying function apply model. Default broom.mixed::tidy. function must return data frame term column. .term Optional string specifying term filter tidying (e.g., \"(Intercept)\"). NULL (default), terms retained.","code":""},{"path":"https://iancero.github.io/rollout/reference/extract_model_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract and tidy model results from a column of models — extract_model_results","text":"tidy data frame original columns models joined tidied model results, typically including columns term, estimate, std.error, statistic, p.value.","code":""},{"path":"https://iancero.github.io/rollout/reference/extract_model_results.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract and tidy model results from a column of models — extract_model_results","text":"","code":"library(dplyr) #> Error in library(dplyr): there is no package called ‘dplyr’ library(purrr) library(broom.mixed) #> Error in library(broom.mixed): there is no package called ‘broom.mixed’  # Simulate and fit models sim_models <- tibble(   id = 1:5,   model = map(1:5, ~ lm(mpg ~ wt, data = mtcars)) ) #> Error in tibble(id = 1:5, model = map(1:5, ~lm(mpg ~ wt, data = mtcars))): could not find function \"tibble\"  # Extract all terms extract_model_results(sim_models) #> Error in loadNamespace(x): there is no package called ‘tidyr’  # Extract only the slope term extract_model_results(sim_models, .term = \"wt\") #> Error in loadNamespace(x): there is no package called ‘tidyr’"},{"path":"https://iancero.github.io/rollout/reference/fit_models.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit models in parallel across a list-column of datasets — fit_models","title":"Fit models in parallel across a list-column of datasets — fit_models","text":"Applies user-specified model-fitting function element list-column datasets .data, fitting models parallel progress bar, returns original data frame new model column containing fitted models.","code":""},{"path":"https://iancero.github.io/rollout/reference/fit_models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit models in parallel across a list-column of datasets — fit_models","text":"","code":"fit_models(   .data,   .x,   .f,   packages = NULL,   n_cores = parallel::detectCores() - 1 )"},{"path":"https://iancero.github.io/rollout/reference/fit_models.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit models in parallel across a list-column of datasets — fit_models","text":".data data frame containing list-column datasets model function applied. .x Unquoted column name list-column containing datasets. .f function formula apply dataset fit desired model (e.g., ~ lm(y ~ x, data = .) ~ lme4::lmer(y ~ x + (x | group), data = .)). packages character vector package names load parallel worker, model-fitting function requires additional packages. Defaults NULL. n_cores Number cores use parallel processing. Defaults parallel::detectCores() - 1.","code":""},{"path":"https://iancero.github.io/rollout/reference/fit_models.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit models in parallel across a list-column of datasets — fit_models","text":"original .data data frame additional model column containing fitted model objects returned .f.","code":""},{"path":"https://iancero.github.io/rollout/reference/fit_models.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit models in parallel across a list-column of datasets — fit_models","text":"function intended use simulation pipelines multiple datasets generated (e.g., via simulate_datasets()), models need fitted dataset efficiently parallel. uses pbapply::pblapply() provide progress bar model fitting, parallel::makeCluster() multi-core processing. Packages specified packages loaded worker ensure model-fitting functions depend packages work correctly parallel.","code":""},{"path":"https://iancero.github.io/rollout/reference/fit_models.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit models in parallel across a list-column of datasets — fit_models","text":"","code":"library(dplyr) #> Error in library(dplyr): there is no package called ‘dplyr’ library(purrr) library(lme4) #> Error in library(lme4): there is no package called ‘lme4’  # Create example grouped datasets for mixed models datasets <- tibble(   id = 1:5,   data = map(1:5, ~ {     df <- sleepstudy[sample(nrow(sleepstudy), 50, replace = TRUE), ]     df$Subject <- factor(df$Subject)     df   }) ) #> Error in tibble(id = 1:5, data = map(1:5, ~{    df <- sleepstudy[sample(nrow(sleepstudy), 50, replace = TRUE),         ]    df$Subject <- factor(df$Subject)    df})): could not find function \"tibble\"  # Fit linear mixed models in parallel fitted_models <- fit_models(   datasets,   .x = data,   .f = ~ lme4::lmer(Reaction ~ Days + (Days | Subject), data = .),   packages = c(\"lme4\") ) #> Error: object 'datasets' not found  # Inspect the first fitted mixed model summary(fitted_models$model[[1]]) #> Error: object 'fitted_models' not found  # Tidy the fitted models using extract_model_results() for further evaluation extracted <- extract_model_results(fitted_models) #> Error in loadNamespace(x): there is no package called ‘tidyr’ head(extracted) #> Error: object 'extracted' not found  # Summarise estimates for 'Days' across simulated fits extracted |>   filter(term == \"Days\") |>   evaluate_model_results(     mean_estimate = mean(estimate, na.rm = TRUE),     sd_estimate = sd(estimate, na.rm = TRUE)   ) #> Error in loadNamespace(x): there is no package called ‘dplyr’"}]
